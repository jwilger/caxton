name: Deploy Jekyll Site to GitHub Pages

on:
  # Automatic deployment on push to main
  push:
    branches: ["main"]

  # Manual deployment option
  workflow_dispatch:
    inputs:
      deploy_preview:
        description: 'Deploy a preview version'
        type: boolean
        default: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for git info

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: website

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Sync ADRs to Jekyll collection
        run: |
          echo "Syncing ADRs from docs/adr/ to website/_adrs/"

          # Create _adrs directory if it doesn't exist
          mkdir -p website/_adrs

          # Copy all ADR files
          cp docs/adr/*.md website/_adrs/ 2>/dev/null || true

          # Verify sync
          SOURCE_COUNT=$(ls -1 docs/adr/*.md 2>/dev/null | wc -l)
          JEKYLL_COUNT=$(ls -1 website/_adrs/*.md 2>/dev/null | grep -v README.md | wc -l)

          echo "Source ADRs: $SOURCE_COUNT"
          echo "Jekyll ADRs: $JEKYLL_COUNT"

          if [ "$SOURCE_COUNT" -ne "$JEKYLL_COUNT" ]; then
            echo "ERROR: ADR count mismatch!"
            echo "Expected $SOURCE_COUNT ADRs in website/_adrs/, found $JEKYLL_COUNT"
            exit 1
          fi

          echo "âœ… ADR sync completed successfully"

      - name: Setup Rust (for rustdoc)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Copy markdown documentation
        run: |
          # Copy main documentation files to website
          mkdir -p website/docs
          cp README.md ARCHITECTURE.md ROADMAP.md SECURITY.md CONTRIBUTING.md website/docs/ 2>/dev/null || true

          # Add Jekyll front matter to docs if not present
          for file in website/docs/*.md; do
            if [ -f "$file" ] && ! grep -q "^---" "$file"; then
              filename=$(basename "$file" .md)
              # Create temp file with front matter
              {
                echo "---"
                echo "layout: default"
                echo "title: \"${filename}\""
                echo "---"
                echo ""
                cat "$file"
              } > "${file}.tmp"
              mv "${file}.tmp" "$file"
            fi
          done

      - name: Build Jekyll site
        run: |
          cd website
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Build Rust documentation
        run: |
          # Build rustdoc
          cargo doc --no-deps --all-features

          # Copy rustdoc to Jekyll output (will be at /doc/ path)
          mkdir -p website/_site/doc
          cp -r target/doc/* website/_site/doc/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
