name: "Toolchain Matrix Testing"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Manual trigger for comprehensive testing
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  toolchain-matrix:
    name: Test (${{ matrix.toolchain }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    # This job is optional and doesn't block merges
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, beta, nightly]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Check code formatting (stable only)
        if: matrix.toolchain == 'stable'
        run: cargo fmt --all -- --check

      - name: Run Clippy (warnings allowed on beta/nightly)
        run: |
          if [ "${{ matrix.toolchain }}" = "stable" ]; then
            cargo clippy --all-targets --all-features -- -D warnings
          else
            cargo clippy --all-targets --all-features
          fi
        shell: bash

      - name: Build project
        run: cargo build --verbose

      - name: Run tests
        run: cargo nextest run --nocapture --no-tests=pass

      - name: Build documentation (stable only)
        if: matrix.toolchain == 'stable'
        run: cargo doc --no-deps --document-private-items
