#!/bin/bash
# pre-commit-memory - Rebuild memory indices for committed memory files
set -euo pipefail

# Source memory CLI configuration and library
SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"
MEMORY_CLI_DIR="$SCRIPT_DIR/../tools"

# Check if memory CLI exists
if [[ ! -f "$MEMORY_CLI_DIR/memory-cli" ]]; then
    echo "Warning: memory-cli not found, skipping memory index rebuild" >&2
    exit 0
fi

# Source configuration
source "$MEMORY_CLI_DIR/memory-cli-config.sh"
source "$MEMORY_CLI_DIR/memory-cli-lib.sh"

# Function to check if any memory files are being committed
has_memory_files_in_commit() {
    # Check if any files under .claude/memories/ are staged
    git diff --cached --name-only | grep -q '^\.claude/memories/' 2>/dev/null
}

# Main execution
main() {
    # Only run if memory files are being committed
    if ! has_memory_files_in_commit; then
        exit 0
    fi

    echo "Memory files detected in commit, rebuilding shared index..." >&2

    # Rebuild shared index from committed memory files
    if ! rebuild_index_for_scope "shared" 2>/dev/null; then
        echo "Warning: Failed to rebuild shared memory index" >&2
        # Don't fail the commit, just warn
        exit 0
    fi

    # Stage the updated index file (it will be excluded from commit by .gitignore)
    # This ensures the index is up-to-date locally even though it won't be committed
    if [[ -f "$MEMORY_BASE_PATH/shared/index.json" ]]; then
        echo "Successfully rebuilt shared memory index" >&2
    fi

    exit 0
}

# Run main function
main "$@"
